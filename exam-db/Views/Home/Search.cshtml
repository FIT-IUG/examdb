@using PagedList.Mvc
@model PagedList.IPagedList<exam_db.Models.Item>

@{
    ViewBag.Title = "Search";
}
   
<link href="~/Content/search.css" rel="stylesheet" />
<div class="container">

    <div class="search_page ">

        <nav class="pagination_nav">
            <h4 class="search_page_title">@Resources.InternalPages.Search_Results_Title</h4>

            @*<ul class="pagination">
                <li class="page-item"><a class="page-link" href="#">@Resources.InternalPages.Previous</a></li>
                <li class="page-item"><a class="page-link" href="#">1</a></li>
                <li class="page-item"><a class="page-link" href="#">2</a></li>
                <li class="page-item"><a class="page-link" href="#">3</a></li>
                <li class="page-item"><a class="page-link" href="#">@Resources.InternalPages.Next</a></li>
            </ul>*@
        </nav>

        @if (Model != null)
        {
            <ul class="list-unstyled recommended_list">
                <!-- Start list item show (repeat it inside for loop)-->
                @foreach (var item in Model)
                {
                    <li>
                        <div class="item">
                            <div class="item_body">
                                <div class="row">
                                    <div class="col-md-7">
                                        <div class="item_img_and_info_holder">
                                            <div class="item_type_img_holder">
                                                @*".pdf", ".csv", ".jpg", ".png", ".ppt", ".txt", ".xlsx", ".docx", ".doc", "xls"*@
                                                @if (item.listOfFile.Count <= 1)
                                                {
                                                    if (item.listOfFile.Where(x => x.type == exam_db.Models.FileType.csv).SingleOrDefault() != null)
                                                    {
                                                        <img class="item_type_img" src="~/Content/images/files_types/csv.png" />
                                                    }
                                                    else if (item.listOfFile.Where(x => x.type == exam_db.Models.FileType.docx).SingleOrDefault() != null)
                                                    {
                                                        <img class="item_type_img" src="~/Content/images/files_types/doc.png" />
                                                    }
                                                    else if (item.listOfFile.Where(x => x.type == exam_db.Models.FileType.png).SingleOrDefault() != null)
                                                    {
                                                        <img class="item_type_img" src="~/Content/images/files_types/png.png" />
                                                    }
                                                    else if (item.listOfFile.Where(x => x.type == exam_db.Models.FileType.Jpg).SingleOrDefault() != null)
                                                    {
                                                        <img class="item_type_img" src="~/Content/images/files_types/jpg.png" />
                                                    }
                                                    else if (item.listOfFile.Where(x => x.type == exam_db.Models.FileType.ppt).SingleOrDefault() != null)
                                                    {
                                                        <img class="item_type_img" src="~/Content/images/files_types/ppt.png" />
                                                    }
                                                    else if (item.listOfFile.Where(x => x.type == exam_db.Models.FileType.xls).SingleOrDefault() != null)
                                                    {
                                                        <img class="item_type_img" src="~/Content/images/files_types/xls.png" />
                                                    }
                                                    else if (item.listOfFile.Where(x => x.type == exam_db.Models.FileType.txt).SingleOrDefault() != null)
                                                    {
                                                        <img class="item_type_img" src="~/Content/images/files_types/txt.png" />
                                                    }

                                                }
                                                else
                                                {
                                                    //for any
                                                    <img class="item_type_img" src="~/Content/images/files_types/doc.png" />
                                                }

                                                @*<img class="item_type_img" src="~/Content/images/files_types/pdf.png" />*@
                                            </div>

                                            <div class="item_info">
                                                <a class="black_link no_decoration" href="~/Web/File?fileId=@item.Id">
                                                    <h6 class="item_title">@item.title</h6>
                                                </a>
                                                <a class="black_link no_decoration" href="#">
                                                    <div class="item_owner">
                                                        <img class="item_owner_img" src="~/Content/images/avatar.png" />
                                                        <span class="item_owner_name">@item.User.UserName</span>
                                                    </div>
                                                </a>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-5">
                                        <div class="item_statistics">
                                            <div class="statistic">
                                                <i class="fa fa-heart"></i> @item.likeNumber
                                            </div>
                                            <div class="statistic">
                                                <i class="fa fa-eye"></i> @item.viewNumber
                                            </div>
                                            <div class="statistic">
                                                <i class="fa fa-download"></i> @item.downloadNumber
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </li>
                }
                <!-- End list item show (repeat it inside for loop)-->



            </ul>
        }
        else
        {
            <h1>@ViewBag.message</h1>
        }
        
        @*<nav class="bottom_nav_pagination">
            <ul class="pagination">
                <li class="page-item"><a class="page-link" href="#">@Resources.InternalPages.Previous</a></li>
                <li class="page-item"><a class="page-link" href="#">1</a></li>
                <li class="page-item"><a class="page-link" href="#">2</a></li>
                <li class="page-item"><a class="page-link" href="#">3</a></li>
                <li class="page-item"><a class="page-link" href="#">@Resources.InternalPages.Next</a></li>
            </ul>
        </nav>*@

        @Html.PagedListPager(Model, page => Url.Action("Search", "Home", new
        {

       page,
       @class = "",
       search = Request.QueryString["search"],
       mid = Request.QueryString["mid"],
       final = Request.QueryString["final"],
       all = Request.QueryString["all"]

   }), new PagedListRenderOptions()
        {
       LiElementClasses = new string[] { "page-item" },

   })


    </div>
</div>